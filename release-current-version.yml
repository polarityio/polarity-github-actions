# This workflow will run on merge of a PR or push to master/main
# It will run the integration development checklist and if that passes
# creates a new releases with the Release and Tag name both being the 
# package.json version and will with a created tgz file and the SHA256 has in the release body


name: Release Current Version

on:
  push:
    branches: [ master, main ]

jobs:
  release-current-version-12:
    runs-on: ubuntu-latest
    container: 'centos:7'
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v3
      with:
        node-version: 12.22.12
    - name: Get NPM Version
      id: package-version
      uses: martinbeentjes/npm-get-version-action@95bc31c6dd3145896c110e382f840bb1e750d09c
    - name: Create Build
      id: create_build
      run: |
        npm ci &&
        cd .. && 
        tar --exclude="./${{ github.event.repository.name }}/.git" --exclude="./${{ github.event.repository.name }}/.gitignore" --exclude="./${{ github.event.repository.name }}/.github" -czvf "${{ github.event.repository.name }}-${{ steps.package-version.outputs.current-version }}+node-12.22.12.tgz" "./${{ github.event.repository.name }}" &&  
        echo "::set-output name=build_hash::$(sha256sum '${{ github.event.repository.name }}-${{ steps.package-version.outputs.current-version }}+node-12.22.12.tgz' | grep -oE '^[^ ]*' )" &&
        mv "${{ github.event.repository.name }}-${{ steps.package-version.outputs.current-version }}+node-12.22.12.tgz" ${{ github.event.repository.name }} &&
        cd ${{ github.event.repository.name }}
    - name: Polarity Integration Development Checklist
      id: int-dev-checklist
      uses: polarityio/polarity-integration-development-checklist@v1.0.0
      with:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Adding SHA256 Hash For Release
      run: |
        echo "${{ steps.create_build.outputs.build_hash }}" > node12ReleaseSHA256Hash.txt
    - name: Upload node12ReleaseSHA256Hash
      uses: actions/upload-artifact@v3
      with:
        name: node12ReleaseSHA256Hash
        path: node12ReleaseSHA256Hash.txt
    - name: Upload node12ReleaseZip
      uses: actions/upload-artifact@v3
      with:
        name: node12ReleaseZip
        path: ${{ github.event.repository.name }}-${{steps.package-version.outputs.current-version}}+node-12.22.12.tgz

  release-current-version-14:
    runs-on: ubuntu-latest
    container: 'centos:7'
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v3
      with:
        node-version: 14.21.1
    - name: Get NPM Version
      id: package-version
      uses: martinbeentjes/npm-get-version-action@95bc31c6dd3145896c110e382f840bb1e750d09c
    - name: Create Build
      id: create_build
      run: |
        npm ci &&
        cd .. && 
        tar --exclude="./${{ github.event.repository.name }}/.git" --exclude="./${{ github.event.repository.name }}/.gitignore" --exclude="./${{ github.event.repository.name }}/.github" -czvf "${{ github.event.repository.name }}-${{ steps.package-version.outputs.current-version }}+node-14.21.1.tgz" "./${{ github.event.repository.name }}" &&  
        echo "::set-output name=build_hash::$(sha256sum '${{ github.event.repository.name }}-${{ steps.package-version.outputs.current-version }}+node-14.21.1.tgz' | grep -oE '^[^ ]*' )" &&
        mv "${{ github.event.repository.name }}-${{ steps.package-version.outputs.current-version }}+node-14.21.1.tgz" ${{ github.event.repository.name }} &&
        cd ${{ github.event.repository.name }}
    - name: Adding SHA256 Hash For Release
      run: |
        echo "${{ steps.create_build.outputs.build_hash }}" > node14ReleaseSHA256Hash.txt
    - name: Upload node14ReleaseSHA256Hash
      uses: actions/upload-artifact@v3
      with:
        name: node14ReleaseSHA256Hash
        path: node14ReleaseSHA256Hash.txt
    - name: Upload node14ReleaseZip
      uses: actions/upload-artifact@v3
      with:
        name: node14ReleaseZip
        path: ${{ github.event.repository.name }}-${{steps.package-version.outputs.current-version}}+node-14.21.1.tgz
  
  release-current-version-18:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v3
      with:
        node-version: 18.12.1
    - name: Get NPM Version
      id: package-version
      uses: martinbeentjes/npm-get-version-action@95bc31c6dd3145896c110e382f840bb1e750d09c
    - name: Create Build
      id: create_build
      run: |
        npm ci &&
        cd .. && 
        tar --exclude="./${{ github.event.repository.name }}/.git" --exclude="./${{ github.event.repository.name }}/.gitignore" --exclude="./${{ github.event.repository.name }}/.github" -czvf "${{ github.event.repository.name }}-${{ steps.package-version.outputs.current-version }}+node-18.12.1.tgz" "./${{ github.event.repository.name }}" &&  
        echo "::set-output name=build_hash::$(sha256sum '${{ github.event.repository.name }}-${{ steps.package-version.outputs.current-version }}+node-18.12.1.tgz' | grep -oE '^[^ ]*' )" &&
        mv "${{ github.event.repository.name }}-${{ steps.package-version.outputs.current-version }}+node-18.12.1.tgz" ${{ github.event.repository.name }} &&
        cd ${{ github.event.repository.name }}
    - name: Adding SHA256 Hash For Release
      run: |
        echo "${{ steps.create_build.outputs.build_hash }}" > node18ReleaseSHA256Hash.txt
    - name: Upload node18ReleaseSHA256Hash
      uses: actions/upload-artifact@v3
      with:
        name: node18ReleaseSHA256Hash
        path: node18ReleaseSHA256Hash.txt
    - name: Upload node18ReleaseZip
      uses: actions/upload-artifact@v3
      with:
        name: node18ReleaseZip
        path: ${{ github.event.repository.name }}-${{steps.package-version.outputs.current-version}}+node-18.12.1.tgz

  create-releases:
    runs-on: ubuntu-latest
    needs: [release-current-version-12, release-current-version-14, release-current-version-18]
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v3
    - name: Get NPM Version
      id: package-version
      uses: martinbeentjes/npm-get-version-action@95bc31c6dd3145896c110e382f840bb1e750d09c

    - name: Download node12ReleaseSHA256Hash
      uses: actions/download-artifact@v3
      with:
        name: node12ReleaseSHA256Hash
    - name: Add node12ReleaseSHA256Hash to ENV for use
      run: |
        value=`cat node12ReleaseSHA256Hash.txt`
        echo "node12ReleaseSHA256Hash=$value" >> $GITHUB_ENV
    - name: Download node14ReleaseSHA256Hash
      uses: actions/download-artifact@v3
      with:
        name: node14ReleaseSHA256Hash
    - name: Add node14ReleaseSHA256Hash to ENV for use
      run: |
        value=`cat node14ReleaseSHA256Hash.txt`
        echo "node14ReleaseSHA256Hash=$value" >> $GITHUB_ENV
    - name: Download node18ReleaseSHA256Hash
      uses: actions/download-artifact@v3
      with:
        name: node18ReleaseSHA256Hash
    - name: Add node18ReleaseSHA256Hash to ENV for use
      run: |
        value=`cat node18ReleaseSHA256Hash.txt`
        echo "node18ReleaseSHA256Hash=$value" >> $GITHUB_ENV

    - name: Create Versioned Release
      id: create_versioned_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{steps.package-version.outputs.current-version}}
        release_name: ${{steps.package-version.outputs.current-version}}
        body: |
          # Release Notes
          - TODO 
          
          # Downloads

          **Polarity Server 4.2.x**
          - DOWNLOAD: [${{ github.event.repository.name }}-${{ steps.package-version.outputs.current-version }}+node-12.22.12.tgz](https://github.com/polarityio/${{ github.event.repository.name }}/releases/download/${{ steps.package-version.outputs.current-version }}/${{ github.event.repository.name }}-${{ steps.package-version.outputs.current-version }}+node-12.22.12.tgz)
          SHA256: ${{ env.node12ReleaseSHA256Hash }}

          **Polarity Server 4.3.x**
          - DOWNLOAD: [${{ github.event.repository.name }}-${{ steps.package-version.outputs.current-version }}+node-14.21.1.tgz](https://github.com/polarityio/${{ github.event.repository.name }}/releases/download/${{ steps.package-version.outputs.current-version }}/${{ github.event.repository.name }}-${{ steps.package-version.outputs.current-version }}+node-14.21.1.tgz)
          SHA256: ${{ env.node14ReleaseSHA256Hash }}

          **Polarity Server 5.x**
          - DOWNLOAD: [${{ github.event.repository.name }}-${{ steps.package-version.outputs.current-version }}+node-18.12.1.tgz](https://github.com/polarityio/${{ github.event.repository.name }}/releases/download/${{ steps.package-version.outputs.current-version }}/${{ github.event.repository.name }}-${{ steps.package-version.outputs.current-version }}+node-18.12.1.tgz)
          SHA256: ${{ env.node18ReleaseSHA256Hash }}
        draft: false
        prerelease: false

    - name: Add Release Url for Next Jobs
      run: |
        echo "${{ steps.create_versioned_release.outputs.upload_url }}" > newReleaseUploadUrl.txt
    - name: Upload newReleaseUploadUrl
      uses: actions/upload-artifact@v3
      with:
        name: newReleaseUploadUrl
        path: newReleaseUploadUrl.txt

  upload-node-12-release-asset:
    runs-on: ubuntu-latest
    needs: create-releases
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v3
    - name: Get NPM Version
      id: package-version
      uses: martinbeentjes/npm-get-version-action@95bc31c6dd3145896c110e382f840bb1e750d09c

    - name: Download newReleaseUploadUrl
      uses: actions/download-artifact@v3
      with:
        name: newReleaseUploadUrl
    - name: Add newReleaseUploadUrl to ENV for use
      run: |
        value=`cat newReleaseUploadUrl.txt`
        echo "newReleaseUploadUrl=$value" >> $GITHUB_ENV
    - name: Download node12ReleaseZip
      uses: actions/download-artifact@v3
      with:
        name: node12ReleaseZip
    - name: Upload Node 12 Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ env.newReleaseUploadUrl }} 
        asset_path: ./${{ github.event.repository.name }}-${{steps.package-version.outputs.current-version}}+node-12.22.12.tgz
        asset_name: ${{ github.event.repository.name }}-${{steps.package-version.outputs.current-version}}+node-12.22.12.tgz
        asset_content_type: application/gzip

  upload-node-14-release-asset:
    runs-on: ubuntu-latest
    needs: create-releases
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v3
    - name: Get NPM Version
      id: package-version
      uses: martinbeentjes/npm-get-version-action@95bc31c6dd3145896c110e382f840bb1e750d09c

    - name: Download newReleaseUploadUrl
      uses: actions/download-artifact@v3
      with:
        name: newReleaseUploadUrl
    - name: Add newReleaseUploadUrl to ENV for use
      run: |
        value=`cat newReleaseUploadUrl.txt`
        echo "newReleaseUploadUrl=$value" >> $GITHUB_ENV
    - name: Download node14ReleaseZip
      uses: actions/download-artifact@v3
      with:
        name: node14ReleaseZip
    - name: Upload Node 14 Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ env.newReleaseUploadUrl }} 
        asset_path: ./${{ github.event.repository.name }}-${{steps.package-version.outputs.current-version}}+node-14.21.1.tgz
        asset_name: ${{ github.event.repository.name }}-${{steps.package-version.outputs.current-version}}+node-14.21.1.tgz
        asset_content_type: application/gzip
    
  upload-node-18-release-asset:
    runs-on: ubuntu-latest
    needs: create-releases
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v3
    - name: Get NPM Version
      id: package-version
      uses: martinbeentjes/npm-get-version-action@95bc31c6dd3145896c110e382f840bb1e750d09c

    - name: Download newReleaseUploadUrl
      uses: actions/download-artifact@v3
      with:
        name: newReleaseUploadUrl
    - name: Add newReleaseUploadUrl to ENV for use
      run: |
        value=`cat newReleaseUploadUrl.txt`
        echo "newReleaseUploadUrl=$value" >> $GITHUB_ENV
    - name: Download node18ReleaseZip
      uses: actions/download-artifact@v3
      with:
        name: node18ReleaseZip
    - name: Upload Node 18Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ env.newReleaseUploadUrl }} 
        asset_path: ./${{ github.event.repository.name }}-${{steps.package-version.outputs.current-version}}+node-18.12.1.tgz
        asset_name: ${{ github.event.repository.name }}-${{steps.package-version.outputs.current-version}}+node-18.12.1.tgz
        asset_content_type: application/gzip