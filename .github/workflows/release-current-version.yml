# This workflow will run on merge of a PR or push to master/main
# It will run the integration development checklist and if that passes
# creates a new releases with the Release and Tag name both being the 
# package.json version and will with a created tgz file and the SHA256 has in the release body

name: Test Release Current Version

on:
  workflow_call:
    inputs:
      old-node-server-node-version:
        description: "The Node Version for the Oldest Supported Server Version"
        required: false
        type: string
        default: 12.22.12
      
      # old-node-server-node-version
      # new-node-server-node-version
      # elixir-server-node-version
      # node-servers-os-version
      # elixir-server-os-version
      # use-integration-development-checklist

jobs:
  OldNodePolarityServerRelease:
    runs-on: ubuntu-latest
    container: 'centos:7'
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v3
      with:
        node-version: ${{ inputs.old-node-server-node-version }}
    - name: Get NPM Version
      id: package-version
      uses: martinbeentjes/npm-get-version-action@95bc31c6dd3145896c110e382f840bb1e750d09c
    - name: Create Build
      id: create_build
      run: |
        npm ci &&
        cd .. && 
        tar --exclude="./${{ github.event.repository.name }}/.git" --exclude="./${{ github.event.repository.name }}/.gitignore" --exclude="./${{ github.event.repository.name }}/.github" -czvf "${{ github.event.repository.name }}-${{ steps.package-version.outputs.current-version }}+node-${{ inputs.old-node-server-node-version }}.tgz" "./${{ github.event.repository.name }}" &&  
        echo "::set-output name=build_hash::$(sha256sum '${{ github.event.repository.name }}-${{ steps.package-version.outputs.current-version }}+node-${{ inputs.old-node-server-node-version }}.tgz' | grep -oE '^[^ ]*' )" &&
        mv "${{ github.event.repository.name }}-${{ steps.package-version.outputs.current-version }}+node-${{ inputs.old-node-server-node-version }}.tgz" ${{ github.event.repository.name }} &&
        cd ${{ github.event.repository.name }}
    - name: Polarity Integration Development Checklist
      id: int-dev-checklist
      uses: polarityio/polarity-integration-development-checklist
      with:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Adding SHA256 Hash For Old Polarity Node Server Release
      run: |
        echo "${{ steps.create_build.outputs.build_hash }}" > oldPolarityNodeServerReleaseSHA256Hash.txt
    - name: Upload oldPolarityNodeServerReleaseSHA256Hash
      uses: actions/upload-artifact@v3
      with:
        name: oldPolarityNodeServerReleaseSHA256Hash
        path: oldPolarityNodeServerReleaseSHA256Hash.txt
    - name: Upload oldPolarityNodeServerReleaseZip
      uses: actions/upload-artifact@v3
      with:
        name: oldPolarityNodeServerReleaseZip
        path: ${{ github.event.repository.name }}-${{steps.package-version.outputs.current-version}}+node-${{ inputs.old-node-server-node-version }}.tgz

  NewPolarityNodeServerRelease:
    runs-on: ubuntu-latest
    container: 'centos:7'
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v3
      with:
        node-version: 14.21.1
    - name: Get NPM Version
      id: package-version
      uses: martinbeentjes/npm-get-version-action@95bc31c6dd3145896c110e382f840bb1e750d09c
    - name: Create Build
      id: create_build
      run: |
        npm ci &&
        cd .. && 
        tar --exclude="./${{ github.event.repository.name }}/.git" --exclude="./${{ github.event.repository.name }}/.gitignore" --exclude="./${{ github.event.repository.name }}/.github" -czvf "${{ github.event.repository.name }}-${{ steps.package-version.outputs.current-version }}+node-14.21.1.tgz" "./${{ github.event.repository.name }}" &&  
        echo "::set-output name=build_hash::$(sha256sum '${{ github.event.repository.name }}-${{ steps.package-version.outputs.current-version }}+node-14.21.1.tgz' | grep -oE '^[^ ]*' )" &&
        mv "${{ github.event.repository.name }}-${{ steps.package-version.outputs.current-version }}+node-14.21.1.tgz" ${{ github.event.repository.name }} &&
        cd ${{ github.event.repository.name }}
    - name: Adding SHA256 Hash For Release
      run: |
        echo "${{ steps.create_build.outputs.build_hash }}" > newPolarityNodeServerReleaseSHA256Hash.txt
    - name: Upload newPolarityNodeServerReleaseSHA256Hash
      uses: actions/upload-artifact@v3
      with:
        name: newPolarityNodeServerReleaseSHA256Hash
        path: newPolarityNodeServerReleaseSHA256Hash.txt
    - name: Upload newPolarityNodeServerReleaseZip
      uses: actions/upload-artifact@v3
      with:
        name: newPolarityNodeServerReleaseZip
        path: ${{ github.event.repository.name }}-${{steps.package-version.outputs.current-version}}+node-14.21.1.tgz
  
  ElixirServerRelease:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v3
      with:
        node-version: 18.12.1
    - name: Get NPM Version
      id: package-version
      uses: martinbeentjes/npm-get-version-action@95bc31c6dd3145896c110e382f840bb1e750d09c
    - name: Create Build
      id: create_build
      run: |
        npm ci &&
        cd .. && 
        tar --exclude="./${{ github.event.repository.name }}/.git" --exclude="./${{ github.event.repository.name }}/.gitignore" --exclude="./${{ github.event.repository.name }}/.github" -czvf "${{ github.event.repository.name }}-${{ steps.package-version.outputs.current-version }}+node-18.12.1.tgz" "./${{ github.event.repository.name }}" &&  
        echo "::set-output name=build_hash::$(sha256sum '${{ github.event.repository.name }}-${{ steps.package-version.outputs.current-version }}+node-18.12.1.tgz' | grep -oE '^[^ ]*' )" &&
        mv "${{ github.event.repository.name }}-${{ steps.package-version.outputs.current-version }}+node-18.12.1.tgz" ${{ github.event.repository.name }} &&
        cd ${{ github.event.repository.name }}
    - name: Adding SHA256 Hash For Release
      run: |
        echo "${{ steps.create_build.outputs.build_hash }}" > elixirPolarityServerReleaseSHA256Hash.txt
    - name: Upload elixirPolarityServerReleaseSHA256Hash
      uses: actions/upload-artifact@v3
      with:
        name: elixirPolarityServerReleaseSHA256Hash
        path: elixirPolarityServerReleaseSHA256Hash.txt
    - name: Upload elixirPolarityServerReleaseZip
      uses: actions/upload-artifact@v3
      with:
        name: elixirPolarityServerReleaseZip
        path: ${{ github.event.repository.name }}-${{steps.package-version.outputs.current-version}}+node-18.12.1.tgz

  create-releases:
    runs-on: ubuntu-latest
    needs: [ReleaseForOldNodePolarityServerRelease, NewPolarityNodeServerRelease, ElixirServerRelease]
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v3
    - name: Get NPM Version
      id: package-version
      uses: martinbeentjes/npm-get-version-action@95bc31c6dd3145896c110e382f840bb1e750d09c

    - name: Download oldPolarityNodeServerReleaseSHA256Hash
      uses: actions/download-artifact@v3
      with:
        name: oldPolarityNodeServerReleaseSHA256Hash
    - name: Add oldPolarityNodeServerReleaseSHA256Hash to ENV for use
      run: |
        value=`cat oldPolarityNodeServerReleaseSHA256Hash.txt`
        echo "oldPolarityNodeServerReleaseSHA256Hash=$value" >> $GITHUB_ENV
    - name: Download newPolarityNodeServerReleaseSHA256Hash
      uses: actions/download-artifact@v3
      with:
        name: newPolarityNodeServerReleaseSHA256Hash
    - name: Add newPolarityNodeServerReleaseSHA256Hash to ENV for use
      run: |
        value=`cat newPolarityNodeServerReleaseSHA256Hash.txt`
        echo "newPolarityNodeServerReleaseSHA256Hash=$value" >> $GITHUB_ENV
    - name: Download elixirPolarityServerReleaseSHA256Hash
      uses: actions/download-artifact@v3
      with:
        name: elixirPolarityServerReleaseSHA256Hash
    - name: Add elixirPolarityServerReleaseSHA256Hash to ENV for use
      run: |
        value=`cat elixirPolarityServerReleaseSHA256Hash.txt`
        echo "elixirPolarityServerReleaseSHA256Hash=$value" >> $GITHUB_ENV

    - name: Create Versioned Release
      id: create_versioned_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{steps.package-version.outputs.current-version}}
        release_name: ${{steps.package-version.outputs.current-version}}
        body: |
          # Release Notes
          - TODO 
          
          # Downloads

          **Polarity Server 4.2.x**
          - DOWNLOAD: [${{ github.event.repository.name }}-${{ steps.package-version.outputs.current-version }}+node-${{ inputs.old-node-server-node-version }}.tgz](https://github.com/polarityio/${{ github.event.repository.name }}/releases/download/${{ steps.package-version.outputs.current-version }}/${{ github.event.repository.name }}-${{ steps.package-version.outputs.current-version }}+node-${{ inputs.old-node-server-node-version }}.tgz)
          SHA256: ${{ env.oldPolarityNodeServerReleaseSHA256Hash }}

          **Polarity Server 4.3.x**
          - DOWNLOAD: [${{ github.event.repository.name }}-${{ steps.package-version.outputs.current-version }}+node-14.21.1.tgz](https://github.com/polarityio/${{ github.event.repository.name }}/releases/download/${{ steps.package-version.outputs.current-version }}/${{ github.event.repository.name }}-${{ steps.package-version.outputs.current-version }}+node-14.21.1.tgz)
          SHA256: ${{ env.newPolarityNodeServerReleaseSHA256Hash }}

          **Polarity Server 5.x**
          - DOWNLOAD: [${{ github.event.repository.name }}-${{ steps.package-version.outputs.current-version }}+node-18.12.1.tgz](https://github.com/polarityio/${{ github.event.repository.name }}/releases/download/${{ steps.package-version.outputs.current-version }}/${{ github.event.repository.name }}-${{ steps.package-version.outputs.current-version }}+node-18.12.1.tgz)
          SHA256: ${{ env.elixirPolarityServerReleaseSHA256Hash }}
        draft: false
        prerelease: false

    - name: Add Release Url for Next Jobs
      run: |
        echo "${{ steps.create_versioned_release.outputs.upload_url }}" > newReleaseAssetUploadUrl.txt
    - name: Upload newReleaseAssetUploadUrl
      uses: actions/upload-artifact@v3
      with:
        name: newReleaseAssetUploadUrl
        path: newReleaseAssetUploadUrl.txt

  UploadOldNodeServerReleaseAsset:
    runs-on: ubuntu-latest
    needs: create-releases
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v3
    - name: Get NPM Version
      id: package-version
      uses: martinbeentjes/npm-get-version-action@95bc31c6dd3145896c110e382f840bb1e750d09c

    - name: Download newReleaseAssetUploadUrl
      uses: actions/download-artifact@v3
      with:
        name: newReleaseAssetUploadUrl
    - name: Add newReleaseAssetUploadUrl to ENV for use
      run: |
        value=`cat newReleaseAssetUploadUrl.txt`
        echo "newReleaseAssetUploadUrl=$value" >> $GITHUB_ENV
    - name: Download oldPolarityNodeServerReleaseZip
      uses: actions/download-artifact@v3
      with:
        name: oldPolarityNodeServerReleaseZip
    - name: Upload Old Node Polarity Server Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ env.newReleaseAssetUploadUrl }} 
        asset_path: ./${{ github.event.repository.name }}-${{steps.package-version.outputs.current-version}}+node-${{ inputs.old-node-server-node-version }}.tgz
        asset_name: ${{ github.event.repository.name }}-${{steps.package-version.outputs.current-version}}+node-${{ inputs.old-node-server-node-version }}.tgz
        asset_content_type: application/gzip

  UploadNewNodeServerReleaseAsset:
    runs-on: ubuntu-latest
    needs: create-releases
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v3
    - name: Get NPM Version
      id: package-version
      uses: martinbeentjes/npm-get-version-action@95bc31c6dd3145896c110e382f840bb1e750d09c

    - name: Download newReleaseAssetUploadUrl
      uses: actions/download-artifact@v3
      with:
        name: newReleaseAssetUploadUrl
    - name: Add newReleaseAssetUploadUrl to ENV for use
      run: |
        value=`cat newReleaseAssetUploadUrl.txt`
        echo "newReleaseAssetUploadUrl=$value" >> $GITHUB_ENV
    - name: Download newPolarityNodeServerReleaseZip
      uses: actions/download-artifact@v3
      with:
        name: newPolarityNodeServerReleaseZip
    - name: Upload New Node Polarity Server Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ env.newReleaseAssetUploadUrl }} 
        asset_path: ./${{ github.event.repository.name }}-${{steps.package-version.outputs.current-version}}+node-14.21.1.tgz
        asset_name: ${{ github.event.repository.name }}-${{steps.package-version.outputs.current-version}}+node-14.21.1.tgz
        asset_content_type: application/gzip
    
  UploadElixirServerReleaseAsset:
    runs-on: ubuntu-latest
    needs: create-releases
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v3
    - name: Get NPM Version
      id: package-version
      uses: martinbeentjes/npm-get-version-action@95bc31c6dd3145896c110e382f840bb1e750d09c

    - name: Download newReleaseAssetUploadUrl
      uses: actions/download-artifact@v3
      with:
        name: newReleaseAssetUploadUrl
    - name: Add newReleaseAssetUploadUrl to ENV for use
      run: |
        value=`cat newReleaseAssetUploadUrl.txt`
        echo "newReleaseAssetUploadUrl=$value" >> $GITHUB_ENV
    - name: Download elixirPolarityServerReleaseZip
      uses: actions/download-artifact@v3
      with:
        name: elixirPolarityServerReleaseZip
    - name: Upload Elixir Polarity Server Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ env.newReleaseAssetUploadUrl }} 
        asset_path: ./${{ github.event.repository.name }}-${{steps.package-version.outputs.current-version}}+node-18.12.1.tgz
        asset_name: ${{ github.event.repository.name }}-${{steps.package-version.outputs.current-version}}+node-18.12.1.tgz
        asset_content_type: application/gzip