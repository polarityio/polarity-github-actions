# This workflow will run on merge of a PR or push to master/main
# It will run the integration development checklist and if that passes
# creates a new releases with the Release and Tag name both being the
# package.json version and will with a created tgz file and the SHA256 has in the release body

name: Test Release Current Version

on:
  workflow_call:
    inputs:
      old-node-server-node-version:
        description: 'The Node Version for the Oldest Supported Polarity Node Server Version'
        required: false
        type: string
        default: '12'
      new-node-server-node-version:
        description: 'The Node Version for the Newest Supported Polarity Node Server Version'
        required: false
        type: string
        default: '14'
      elixir-server-node-version:
        description: 'The Node Version for the Polarity Elixir Server Version'
        required: false
        type: string
        default: '18'

      node-servers-os-version:
        description: 'The Operating System for both the Old and New Polarity Node Servers'
        required: false
        type: string
        default: ubuntu-latest
      node-servers-container-version:
        description: 'The Container Version for both the Old and New Polarity Node Servers'
        required: false
        type: string
        default: centos:7
      elixir-server-os-version:
        description: 'The Node Version for the Polarity Elixir Server Version'
        required: false
        type: string
        default: ubuntu-20.04
      use-integration-development-checklist:
        description: 'The Node Version for the Polarity Elixir Server Version'
        required: false
        type: boolean
        default: true

jobs:
  OldNodePolarityServerRelease:
    runs-on: ${{ inputs.node-servers-os-version }}
    container: ${{ inputs.node-servers-container-version }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ inputs.old-node-server-node-version }}
      - name: Get NPM Version
        id: package-version
        uses: martinbeentjes/npm-get-version-action@95bc31c6dd3145896c110e382f840bb1e750d09c
      - name: Create Build
        id: create-build
        run: |
          npm ci &&
          cd .. && 
          tar --exclude="./${{ github.event.repository.name }}/.git" --exclude="./${{ github.event.repository.name }}/.gitignore" --exclude="./${{ github.event.repository.name }}/.github" -czvf "${{ github.event.repository.name }}-${{ steps.package-version.outputs.current-version }}+node-${{ inputs.old-node-server-node-version }}.tgz" "./${{ github.event.repository.name }}" &&  
          echo "buildHash=$(sha256sum '${{ github.event.repository.name }}-${{ steps.package-version.outputs.current-version }}+node-${{ inputs.old-node-server-node-version }}.tgz' | grep -oE '^[^ ]*' )" >> $GITHUB_ENV &&
          mv "${{ github.event.repository.name }}-${{ steps.package-version.outputs.current-version }}+node-${{ inputs.old-node-server-node-version }}.tgz" ${{ github.event.repository.name }} &&
          cd ${{ github.event.repository.name }}
      - name: Polarity Integration Development Checklist
        if: ${{inputs.use-integration-development-checklist}}
        id: int-dev-checklist
        uses: polarityio/polarity-integration-development-checklist@main
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Adding SHA256 Hash For Old Polarity Node Server Release
        run: |
          echo "${{ env.buildHash }}" > oldPolarityNodeServerReleaseSHA256Hash.txt
      - name: Upload oldPolarityNodeServerReleaseSHA256Hash
        uses: actions/upload-artifact@v3
        with:
          name: oldPolarityNodeServerReleaseSHA256Hash
          path: oldPolarityNodeServerReleaseSHA256Hash.txt
      - name: Upload oldPolarityNodeServerReleaseZip
        uses: actions/upload-artifact@v3
        with:
          name: oldPolarityNodeServerReleaseZip
          path: ${{ github.event.repository.name }}-${{steps.package-version.outputs.current-version}}+node-${{ inputs.old-node-server-node-version }}.tgz

  NewNodePolarityServerRelease:
    runs-on: ${{ inputs.node-servers-os-version }}
    container: ${{ inputs.node-servers-container-version }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ inputs.new-node-server-node-version }}
      - name: Get NPM Version
        id: package-version
        uses: martinbeentjes/npm-get-version-action@95bc31c6dd3145896c110e382f840bb1e750d09c
      - name: Create Build
        id: create-build
        run: |
          npm ci &&
          cd .. && 
          tar --exclude="./${{ github.event.repository.name }}/.git" --exclude="./${{ github.event.repository.name }}/.gitignore" --exclude="./${{ github.event.repository.name }}/.github" -czvf "${{ github.event.repository.name }}-${{ steps.package-version.outputs.current-version }}+node-${{ inputs.new-node-server-node-version }}.tgz" "./${{ github.event.repository.name }}" &&  
          echo "buildHash=$(sha256sum '${{ github.event.repository.name }}-${{ steps.package-version.outputs.current-version }}+node-${{ inputs.new-node-server-node-version }}.tgz' | grep -oE '^[^ ]*' )" >> $GITHUB_ENV &&
          mv "${{ github.event.repository.name }}-${{ steps.package-version.outputs.current-version }}+node-${{ inputs.new-node-server-node-version }}.tgz" ${{ github.event.repository.name }} &&
          cd ${{ github.event.repository.name }}
      - name: Adding SHA256 Hash For Release
        run: |
          echo "${{ env.buildHash }}" > newPolarityNodeServerReleaseSHA256Hash.txt
      - name: Upload newPolarityNodeServerReleaseSHA256Hash
        uses: actions/upload-artifact@v3
        with:
          name: newPolarityNodeServerReleaseSHA256Hash
          path: newPolarityNodeServerReleaseSHA256Hash.txt
      - name: Upload newPolarityNodeServerReleaseZip
        uses: actions/upload-artifact@v3
        with:
          name: newPolarityNodeServerReleaseZip
          path: ${{ github.event.repository.name }}-${{steps.package-version.outputs.current-version}}+node-${{ inputs.new-node-server-node-version }}.tgz

  ElixirPolarityServerRelease:
    runs-on: ${{ inputs.elixir-server-os-version }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ inputs.elixir-server-node-version }}
      - name: Get NPM Version
        id: package-version
        uses: martinbeentjes/npm-get-version-action@95bc31c6dd3145896c110e382f840bb1e750d09c
      - name: Create Build
        id: create-build
        run: |
          npm ci &&
          cd .. && 
          tar --exclude="./${{ github.event.repository.name }}/.git" --exclude="./${{ github.event.repository.name }}/.gitignore" --exclude="./${{ github.event.repository.name }}/.github" -czvf "${{ github.event.repository.name }}-${{ steps.package-version.outputs.current-version }}+node-${{ inputs.elixir-server-node-version }}.tgz" "./${{ github.event.repository.name }}" &&  
          echo "buildHash=$(sha256sum '${{ github.event.repository.name }}-${{ steps.package-version.outputs.current-version }}+node-${{ inputs.elixir-server-node-version }}.tgz' | grep -oE '^[^ ]*' )" >> $GITHUB_ENV &&
          mv "${{ github.event.repository.name }}-${{ steps.package-version.outputs.current-version }}+node-${{ inputs.elixir-server-node-version }}.tgz" ${{ github.event.repository.name }} &&
          cd ${{ github.event.repository.name }}
      - name: Adding SHA256 Hash For Release
        run: |
          echo "${{ env.buildHash }}" > elixirPolarityServerReleaseSHA256Hash.txt
      - name: Upload elixirPolarityServerReleaseSHA256Hash
        uses: actions/upload-artifact@v3
        with:
          name: elixirPolarityServerReleaseSHA256Hash
          path: elixirPolarityServerReleaseSHA256Hash.txt
      - name: Upload elixirPolarityServerReleaseZip
        uses: actions/upload-artifact@v3
        with:
          name: elixirPolarityServerReleaseZip
          path: ${{ github.event.repository.name }}-${{steps.package-version.outputs.current-version}}+node-${{ inputs.elixir-server-node-version }}.tgz

  BuildReleaseAssetsAndCreateRelease:
    runs-on: ubuntu-latest
    needs:
      [
        OldNodePolarityServerRelease,
        NewNodePolarityServerRelease,
        ElixirPolarityServerRelease
      ]
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: '0'
      - uses: actions/setup-node@v3
      - name: Get NPM Version
        id: package-version
        uses: martinbeentjes/npm-get-version-action@95bc31c6dd3145896c110e382f840bb1e750d09c

      - name: Download oldPolarityNodeServerReleaseSHA256Hash
        uses: actions/download-artifact@v3
        with:
          name: oldPolarityNodeServerReleaseSHA256Hash
      - name: Add oldPolarityNodeServerReleaseSHA256Hash to ENV for use
        run: |
          value=`cat oldPolarityNodeServerReleaseSHA256Hash.txt`
          echo "oldPolarityNodeServerReleaseSHA256Hash=$value" >> $GITHUB_ENV
      - name: Download newPolarityNodeServerReleaseSHA256Hash
        uses: actions/download-artifact@v3
        with:
          name: newPolarityNodeServerReleaseSHA256Hash
      - name: Add newPolarityNodeServerReleaseSHA256Hash to ENV for use
        run: |
          value=`cat newPolarityNodeServerReleaseSHA256Hash.txt`
          echo "newPolarityNodeServerReleaseSHA256Hash=$value" >> $GITHUB_ENV
      - name: Download elixirPolarityServerReleaseSHA256Hash
        uses: actions/download-artifact@v3
        with:
          name: elixirPolarityServerReleaseSHA256Hash
      - name: Add elixirPolarityServerReleaseSHA256Hash to ENV for use
        run: |
          value=`cat elixirPolarityServerReleaseSHA256Hash.txt`
          echo "elixirPolarityServerReleaseSHA256Hash=$value" >> $GITHUB_ENV

      - name: Download oldPolarityNodeServerReleaseZip
        uses: actions/download-artifact@v3
        with:
          name: oldPolarityNodeServerReleaseZip
      - name: Download newPolarityNodeServerReleaseZip
        uses: actions/download-artifact@v3
        with:
          name: newPolarityNodeServerReleaseZip
      - name: Download elixirPolarityServerReleaseZip
        uses: actions/download-artifact@v3
        with:
          name: elixirPolarityServerReleaseZip

      - name: Getting Git Commit Logs Since Last Release
        run: |
          echo "$(git log $(git tag -l | cat | tail -1)..HEAD --oneline | cat | awk '{$1="-"; print $0}')" > commitLogs.txt
      - name: Add commitLogs to ENV for use
        run: |
          commitLogs=$(cat commitLogs.txt)
          echo "commitLogs<<EOF" >> $GITHUB_ENV
          echo "$commitLogs" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV
      - name: Create Versioned Release
        id: create-versioned-release
        uses: softprops/action-gh-release@v1
        with:
          name: ${{steps.package-version.outputs.current-version}}
          tag_name: ${{steps.package-version.outputs.current-version}}
          body: |
            ## Release Notes
            ${{ env.commitLogs }}

            ## Downloads

            **Polarity Server 4.2.x**
            - DOWNLOAD: [${{ github.event.repository.name }}-${{ steps.package-version.outputs.current-version }}+node-${{ inputs.old-node-server-node-version }}.tgz](https://github.com/polarityio/${{ github.event.repository.name }}/releases/download/${{ steps.package-version.outputs.current-version }}/${{ github.event.repository.name }}-${{ steps.package-version.outputs.current-version }}+node-${{ inputs.old-node-server-node-version }}.tgz)
            SHA256: ${{ env.oldPolarityNodeServerReleaseSHA256Hash }}

            **Polarity Server 4.3.x**
            - DOWNLOAD: [${{ github.event.repository.name }}-${{ steps.package-version.outputs.current-version }}+node-${{ inputs.new-node-server-node-version }}.tgz](https://github.com/polarityio/${{ github.event.repository.name }}/releases/download/${{ steps.package-version.outputs.current-version }}/${{ github.event.repository.name }}-${{ steps.package-version.outputs.current-version }}+node-${{ inputs.new-node-server-node-version }}.tgz)
            SHA256: ${{ env.newPolarityNodeServerReleaseSHA256Hash }}

            **Polarity Server 5.x**
            - DOWNLOAD: [${{ github.event.repository.name }}-${{ steps.package-version.outputs.current-version }}+node-${{ inputs.elixir-server-node-version }}.tgz](https://github.com/polarityio/${{ github.event.repository.name }}/releases/download/${{ steps.package-version.outputs.current-version }}/${{ github.event.repository.name }}-${{ steps.package-version.outputs.current-version }}+node-${{ inputs.elixir-server-node-version }}.tgz)
            SHA256: ${{ env.elixirPolarityServerReleaseSHA256Hash }}
          files: |
            ./${{ github.event.repository.name }}-${{steps.package-version.outputs.current-version}}+node-${{ inputs.old-node-server-node-version }}.tgz
            ./${{ github.event.repository.name }}-${{steps.package-version.outputs.current-version}}+node-${{ inputs.new-node-server-node-version }}.tgz
            ./${{ github.event.repository.name }}-${{steps.package-version.outputs.current-version}}+node-${{ inputs.elixir-server-node-version }}.tgz
          draft: false
          prerelease: false
          generate_release_notes: true
          append_body: true
          token: ${{ secrets.GITHUB_TOKEN }}
